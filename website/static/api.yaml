
openapi: 3.1.0
info:
  title: dbt Cloud API
  description: |
    The dbt Cloud API makes it possible to fetch data from your
    dbt Cloud account and programmatically run and monitor dbt jobs.

    # Authentication

    To authenticate an application with the dbt Cloud API, navigate to the
    API Settings page in your [dbt Cloud profile](https://cloud.getdbt.com/#/profile/api/).
    If you cannot access this page, confirm that your dbt Cloud account has access to the API,
    and that you are using the hosted version of dbt Cloud. If dbt Cloud is running inside of a VPC
    in an Enterprise account, contact your account manager for help finding your API key.

    ## TokenAuth

    Once you've found your API key, use it in the Authorization header of requests to the dbt Cloud API.
    Be sure to include the `Token` prefix in the Authorization header, or the request will fail with a
    "401 Unauthorized" error. Note: `Bearer` can be used in place of `Token` in the Authorization header.
    Both syntaxes are equivalent.

    **Headers**
    ```
    Accept: application/json
    Authorization: Token <your token>
          ```
  version: 4.0.0

servers:
- url: https://cloud.getdbt.com/api/{version}
  variables:
    version:
      default: v4

paths:
  /accounts/{accountID}/runs:
    parameters:
      - $ref: "#/components/parameters/accountIDParam"
    get:
      summary: List all runs
      description: |
        Returns a list of runs in the account. The runs are returned sorted by creation date, with the most recent run
        appearing first.
      tags:
        - Runs
      operationId: list-account-runs
      responses:
        "200":
          description: |
            OK - Everything worked as expected.
          headers:
            x-dbt-continuation-token:
              description: |
                An opaque value generated by the server that the client can use to paginate resources of the same request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunListEnvelope"
              example: |
                ```json
                {
                  "data": [
                    {
                      "id": "22336286",
                      "environment_id": "245",
                      "account_id": "4387",
                      "project_id": "2718",
                      "trigger_id": "23051319",
                      "job_id": "3189",
                      "href": "https://cloud.getdbt.com/api/v4/accounts/4387/runs/22336286",
                      "status": "Succeeded",
                      "status_message": null,
                      "dbt_version": "0.19.2",
                      "git_branch": "main",
                      "git_sha": "418a8f7506aa65b26e559ac29e9570aaf8ebab95",
                      "waiting_on": [],
                      "created_at": 1625096721,
                      "updated_at": 1625096803,
                      "dequeued_at": 1625096734,
                      "started_at": 1625096739,
                      "finished_at": 1625096802,
                      "duration": 81,
                      "queued_duration": 18,
                      "run_duration": 63,
                      "artifacts_saved": true,
                      "has_docs_generated": false,
                      "has_sources_generated": false
                    },
                    {
                      "id": "22335846",
                      "environment_id": "245",
                      "account_id": "4387",
                      "project_id": "2718",
                      "trigger_id": "23050879",
                      "job_id": "3661",
                      "href": "https://cloud.getdbt.com/api/v4/accounts/4387/runs/22335846",
                      "status": "Succeeded",
                      "status_message": null,
                      "dbt_version": "0.19.2",
                      "git_branch": "main",
                      "git_sha": "418a8f7506aa65b26e559ac29e9570aaf8ebab95",
                      "waiting_on": [],
                      "created_at": 1625095826,
                      "updated_at": 1625095967,
                      "dequeued_at": 1625095903,
                      "started_at": 1625095908,
                      "finished_at": 1625095966,
                      "duration": 140,
                      "queued_duration": 82,
                      "run_duration": 58,
                      "artifacts_saved": true,
                      "has_docs_generated": false,
                      "has_sources_generated": false
                    }
                  ]
                }
                ```
        "400":
          description: |
            Bad Request - The request was unacceptable, often due to missing a required parameter.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
        "401":
          description: |
            Unauthorized - No valid API key provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
        "403":
          description: |
            Forbidden - The API key does not have permissions to perform the request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
        "404":
          description: |
            Not Found - The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
              example: |
                ```json
                {
                  "error": {
                    "message": "the requested resource does not exist"
                  }
                }
                ```


  /accounts/{accountID}/runs/{runID}:
    parameters:
      - $ref: "#/components/parameters/accountIDParam"
      - $ref: "#/components/parameters/runIDParam"
    get:
      summary: Retrieve a run
      description: |
        Retrieves the details of an existing run with the given runID.
      tags:
        - Runs
      operationId: get-account-run
      responses:
        "200":
          description: |
            OK - Everything worked as expected.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunEnvelope"
              example: |
                ```json
                {
                  "data": {
                    "id": "22317410",
                    "environment_id": "245",
                    "account_id": "4387",
                    "project_id": "2718",
                    "trigger_id": "265",
                    "job_id": "765532",
                    "href": "https://cloud.getdbt.com/api/v4/accounts/4387/runs/22317410",
                    "status": "Succeeded",
                    "status_message": null,
                    "dbt_version": "0.19.2",
                    "git_branch": "main",
                    "git_sha": "418a8f7506aa65b26e559ac29e9570aaf8ebab95",
                    "waiting_on": [],
                    "created_at": 1625072430,
                    "updated_at": 1625072590,
                    "dequeued_at": 1625072524,
                    "started_at": 1625072529,
                    "finished_at": 1625072589,
                    "duration": 159,
                    "queued_duration": 99,
                    "run_duration": 60,
                    "artifacts_saved": true,
                    "has_docs_generated": false,
                    "has_sources_generated": false
                  }
                }
                ```
        "400":
          description: |
            Bad Request - The request was unacceptable, often due to missing a required parameter.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
        "401":
          description: |
            Unauthorized - No valid API key provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
        "403":
          description: |
            Forbidden - The API key does not have permissions to perform the request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"
        "404":
          description: |
            Not Found - The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorEnvelope"

components:
  parameters:
    accountIDParam:
      description: |
        The account ID to use in a request.
      name: accountID
      in: path
      required: true
    runIDParam:
      description: |
        The run ID to use in a request.
      name: runID
      in: path
      required: true
  schemas:
    RunListEnvelope:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/RunView"
    RunEnvelope:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/RunView"
    RunView:
      type: object
      properties:
        id:
          type: string
          description: |
            A unique identifier for the run.
          example: "22317410"
        environment_id:
          type: string
          description: |
            A unique identifier for the environment.
          example: "245"
        account_id:
          type: string
          description: |
            A unique identifier for the account.
          example: "4387"
        project_id:
          type: string
          description: |
            A unique identifier for the project.
          example: "2718"
        trigger_id:
          type: string
          description: |
            A unique identifier for the job trigger.
          example: "265"
        job_id:
          type: string
          description: |
            A unique identifier for the job.
          example: "765532"
        href:
          type: string
          description: |
            A unique URL for the run.
          example: "https://cloud.getdbt.com/api/v4/accounts/4387/runs/22317410"
        status:
          type: string
          enum: ["Queued", "Starting", "Running", "Succeeded", "Failed", "Canceled"]
          description: |
            The status of the run is either `Queued`, `Starting`, `Running`, `Succeeded`, `Failed`, or `Canceled`.
          example: "Succeeded"
        status_message:
          type: string
          description: |
            Information about the run status.
        dbt_version:
          type: string
          description: |
            The version of dbt that was used to execute the run.
          example: "0.19.2"
        git_branch:
          type: string
          description: |
            The git branch that was used to execute the run.
          example: "main"
        git_sha:
          type: string
          description: |
            The git commit that was used to execute the run.
          example: "418a8f7506aa65b26e559ac29e9570aaf8ebab95"
        waiting_on:
          type: array
          items:
            type: string
          description: |
            A list of runs that must complete before this one may proceed.
          example: ["22334001"]
        created_at:
          type: integer
          description: |
            Time at which the run was created. Measured in seconds since the Unix epoch.
          example: 1625072430
        updated_at:
          type: integer
          description: |
            Time at which the run was updated. Measured in seconds since the Unix epoch.
          example: 1625072590
        dequeued_at:
          type: integer
          description: |
            Time at which the run was dequeued. Measured in seconds since the Unix epoch.
          example: 1625072524
        started_at:
          type: integer
          description: |
            Time at which the run started executing. Measured in seconds since the Unix epoch.
          example: 1625072529
        finished_at:
          type: integer
          description: |
            Time at which the run finished executing. Measured in seconds since the Unix epoch.
          example: 1625072589
        duration:
          type: integer
          description: |
            The time from when the run was created to when it finished. Measured in seconds.
          example: 159
        queued_duration:
          type: integer
          description: |
            The time from when the run was create to when it started executing. Measured in seconds.
          example: 99
        run_duration:
          type: integer
          description: |
            Time from when the run started executing to when it finished executing. Measured in seconds.
          example: 60
        artifacts_saved:
          type: boolean
          description: |
            Indicates if run artifacts were saved.
          example: true
        has_docs_generated:
          type: boolean
          description: |
            Indicates if docs were generated as part of the run execution.
          example: false
        has_sources_generated:
          type: boolean
          description: |
            Indicates if source were generated as part of the run execution.
          example: false.
    ErrorEnvelope:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/ErrorView"
    ErrorView:
      type: object
      description: |
        error details
      properties:
        message:
          type: string
          example: "the requested resource does not exist"
